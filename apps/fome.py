import streamlit as st
from streamlit_folium import folium_static
import folium
import geopandas as gpd
import plotly.express as px
import functools

chart = functools.partial(st.plotly_chart, use_container_width=True)
COMMON_ARGS = {
    "color": "parentName",
    "color_discrete_sequence": px.colors.sequential.Cividis,
    "hover_data": [
        'latest_value',
    ], }


def app():
    global data
    titl, imga = st.columns((4, 0.8))
    imga.image('E-WEB-Goal-02.png')
    titl.title('ODS 2: Fome zero e agricultura sustent√°vel')
    st.subheader('Objetivo: Erradicar a fome, alcan√ßar a seguran√ßa alimentar, melhorar a nutri√ß√£o e promover a agricultura sustent√°vel')
    st.write('*O r√°pido crescimento econ√¥mico e o aumento da produ√ß√£o agr√≠cola nas √∫ltimas duas d√©cadas fizeram com que o n√∫mero de pessoas em m√°-nutri√ß√£o ca√≠sse quase pela metade. Muitos pa√≠ses em desenvolvimento que sofriam com a fome agora podem suprir as necessidades dos mais vulner√°veis. √Åsia central, Sudeste Asi√°tico, Am√©rica Latina e o Caribe s√£o regi√µes que fizeram grandes progressos para erradicar  a fome extrema.* (PNUD, 2022)')
    st.write('A meta de acabar com todas as formas de fome e a m√°-nutri√ß√£o at√© 2030, envolve compreender o atual cen√°rio da fome no mundo. Cada pa√≠s enfrenta uma realidade diferente e suas metas devem ser planejadas de acordo com sua situa√ß√£o.'
             ' A seguir, resultados de an√°lises detalhadas sobre a situa√ß√£o da fome no globo.')

    with st.expander('Saber mais sobre os Indicadores do Objetivo 2'):
        st.write("""**2.1** At√© 2030, acabar com a fome e garantir o acesso de todas as pessoas, em particular os pobres e pessoas em situa√ß√µes vulner√°veis, incluindo crian√ßas, a alimentos seguros, nutritivos e suficientes durante todo o ano 
        \n **2.2** At√© 2030, acabar com todas as formas de desnutri√ß√£o, incluindo atingir, at√© 2025, as metas acordadas internacionalmente sobre nanismo e caquexia em crian√ßas menores de cinco anos de idade, e atender √†s necessidades nutricionais dos adolescentes, mulheres gr√°vidas e lactantes e pessoas idosas
        \n **2.3** At√© 2030, dobrar a produtividade agr√≠cola e a renda dos pequenos produtores de alimentos, particularmente das mulheres, povos ind√≠genas, agricultores familiares, pastores e pescadores, inclusive por meio de acesso seguro e igual √† terra, outros recursos produtivos e insumos, conhecimento, servi√ßos financeiros, mercados e oportunidades de agrega√ß√£o de valor e de emprego n√£o agr√≠cola
        \n **2.4** At√© 2030, garantir sistemas sustent√°veis de produ√ß√£o de alimentos e implementar pr√°ticas agr√≠colas resilientes, que aumentem a produtividade e a produ√ß√£o, que ajudem a manter os ecossistemas, que fortale√ßam a capacidade de adapta√ß√£o √†s mudan√ßas clim√°ticas, √†s condi√ß√µes meteorol√≥gicas extremas, secas, inunda√ß√µes e outros desastres, e que melhorem progressivamente a qualidade da terra e do solo
        \n **2.5** At√© 2020, manter a diversidade gen√©tica de sementes, plantas cultivadas, animais de cria√ß√£o e domesticados e suas respectivas esp√©cies selvagens, inclusive por meio de bancos de sementes e plantas diversificados e bem geridos em n√≠vel nacional, regional e internacional, e garantir o acesso e a reparti√ß√£o justa e equitativa dos benef√≠cios decorrentes da utiliza√ß√£o dos recursos gen√©ticos e conhecimentos tradicionais associados, como acordado internacionalmente
        \n **2.a** Aumentar o investimento, inclusive via o refor√ßo da coopera√ß√£o internacional, em infraestrutura rural, pesquisa e extens√£o de servi√ßos agr√≠colas, desenvolvimento de tecnologia, e os bancos de genes de plantas e animais, para aumentar a capacidade de produ√ß√£o agr√≠cola nos pa√≠ses em desenvolvimento, em particular nos pa√≠ses menos desenvolvidos
        \n **2.b** Corrigir e prevenir as restri√ß√µes ao com√©rcio e distor√ß√µes nos mercados agr√≠colas mundiais, incluindo a elimina√ß√£o paralela de todas as formas de subs√≠dios √† exporta√ß√£o e todas as medidas de exporta√ß√£o com efeito equivalente, de acordo com o mandato da Rodada de Desenvolvimento de Doha
        \n **2.c** Adotar medidas para garantir o funcionamento adequado dos mercados de commodities de alimentos e seus derivados, e facilitar o acesso oportuno √† informa√ß√£o de mercado, inclusive sobre as reservas de alimentos, a fim de ajudar a limitar a volatilidade extrema dos pre√ßos dos alimentos""")
    
    hunger = gpd.read_file(
        'https://services7.arcgis.com/gp50Ao2knMlOM89z/arcgis/rest/services/SN_ITK_DEFC_2_1_1_2020Q2G03/FeatureServer/0/query?outFields=*&where=1%3D1&f=geojson')

    st.subheader('Preval√™ncia de subnutri√ß√£o por pa√≠s')
    m = folium.Map(location=[26.972058, 28.642816], tiles='Stamen Water Color', zoom_start=1.5, control_scale=True)
    folium.GeoJson(
        hunger,
        name='Percentual',
        popup="√∫ltima propor√ß√£o conhecida: ",
        tooltip=folium.features.GeoJsonTooltip(
            fields=['geoAreaName', 'latest_value'],
            aliases=['Pa√≠s (√Årea geogr√°fica): ', 'Preval√™ncia de desnutri√ß√£o (%): '],
            style="background-color: white; color: #333333; font-family: arial; font-size: 12px; padding: 10px;",
            localize=True)
    ).add_to(m)
    folium.LayerControl().add_to(m)
    folium_static(m)

    pol_par = hunger.groupby("parentName")[['latest_value']].sum().reset_index()
    pol_par1 = hunger.groupby("geoAreaName")[['latest_value']].sum().reset_index()

    filepath = gpd.read_file(
        "https://services7.arcgis.com/gp50Ao2knMlOM89z/arcgis/rest/services/AG_PRD_FIESSIN_2_1_2_2020Q2G03/FeatureServer/0/query?outFields=*&where=1%3D1&f=geojson")

    st.subheader('Porcentagem de subnutri√ß√£o por regi√£o')
    fig = px.bar(x=pol_par['parentName'],
                 y=pol_par['latest_value'],
                 orientation='v',
                 labels={'x': 'Regi√£o geogr√°fica', 'y': 'Preval√™ncia de subnutri√ß√£o por pa√≠s (%)'},
                 width=900, height=600)
    st.plotly_chart(fig)

    crop = pol_par['parentName']
    fig = px.pie(pol_par, values="latest_value", names="parentName", **COMMON_ARGS)
    fig.update_layout(margin=dict(t=0, b=0, l=0, r=0))
    chart(fig)

    df_mask = filepath['sex_desc'] != 'Both sexes'
    filtered_df = filepath[df_mask]

    df_mask1 = filepath['age_desc'] == '15 years old and over'
    filtered_df1 = filepath[df_mask1]

    st.subheader('Preval√™ncia de subnutri√ß√£o por sexo')
    st.write('Analisando a propor√ß√£o de pessoas que se encontram em situa√ß√£o de subnutri√ß√£o, percebe-se que o n√∫mero de mulheres nessas condi√ß√µes √© maior do que de homens, em um panorama geral dos pa√≠ses.')
    crop = filtered_df['sex_desc']
    fig = px.pie(filtered_df, values="latest_value", names="sex_desc", **COMMON_ARGS)
    fig.update_layout(margin=dict(t=0, b=0, l=0, r=0))
    chart(fig)
    st.write('**OBS:** Os valores de refer√™ncia s√£o para pessoas com 15 anos completos ou mais.')

    st.subheader('Fonte dos dados:')
    st.info("""
            \n üîç Divis√£o de Estat√≠stica das Na√ß√µes Unidas [UN DESA Statistics Division](https://unstats.un.org/sdgs/dataportal)""")
