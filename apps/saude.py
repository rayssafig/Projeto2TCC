import streamlit as st
from streamlit_folium import folium_static
import folium
import geopandas as gpd
import pandas as pd
import requests, zipfile, io


def app():

    titl, imga = st.columns((4, 0.8))
    imga.image('E-WEB-Goal-03.png')
    titl.title('ODS 3: Sa√∫de e Bem-Estar')
    st.subheader('Garantir o acesso √† sa√∫de de qualidade e promover o bem-estar para todos, em todas as idades')
    st.write('Cada ODS apresenta uma s√©rie de indicadores, que representam objetivos menores que auxiliam a atingir o objetivo principal. '
             'Voc√™ pode visualizar todos os indicadores e metas desenvolviddos para esse ODS, expandindo a se√ß√£o a seguir')

    with st.expander('Saber mais sobre os Indicadores do Objetivo 3'):
        st.write('**3.1** At√© 2030, reduzir a taxa de mortalidade materna global para menos de 70 mortes por 100.000 nascidos vivos')
        st.write('**3.2** At√© 2030, acabar com as mortes evit√°veis de rec√©m-nascidos e crian√ßas menores de 5 anos, com todos os pa√≠ses objetivando reduzir a mortalidade neonatal para pelo menos 12 por 1.000 nascidos vivos e a mortalidade de crian√ßas menores de 5 anos para pelo menos 25 por 1.000 nascidos vivos')
        st.write('**3.3** At√© 2030, acabar com as epidemias de AIDS, tuberculose, mal√°ria e doen√ßas tropicais negligenciadas, e combater a hepatite, doen√ßas transmitidas pela √°gua, e outras doen√ßas transmiss√≠veis')
        st.write('**3.4** At√© 2030, reduzir em um ter√ßo a mortalidade prematura por doen√ßas n√£o transmiss√≠veis via preven√ß√£o e tratamento, e promover a sa√∫de mental e o bem-estar')
        st.write('**3.5** Refor√ßar a preven√ß√£o e o tratamento do abuso de subst√¢ncias, incluindo o abuso de drogas entorpecentes e uso nocivo do √°lcool')
        st.write('**3.6** At√© 2020, reduzir pela metade as mortes e os ferimentos globais por acidentes em estradas')
        st.write('**3.7** At√© 2030, assegurar o acesso universal aos servi√ßos de sa√∫de sexual e reprodutiva, incluindo o planejamento familiar, informa√ß√£o e educa√ß√£o, bem como a integra√ß√£o da sa√∫de reprodutiva em estrat√©gias e programas nacionais')
        st.write('**3.8** Atingir a cobertura universal de sa√∫de, incluindo a prote√ß√£o do risco financeiro, o acesso a servi√ßos de sa√∫de essenciais de qualidade e o acesso a medicamentos e vacinas essenciais seguros, eficazes, de qualidade e a pre√ßos acess√≠veis para todos')
        st.write('**3.9** At√© 2030, reduzir substancialmente o n√∫mero de mortes e doen√ßas por produtos qu√≠micos perigosos, contamina√ß√£o e polui√ß√£o do ar e √°gua do solo')
        st.write('**3.a** Fortalecer a implementa√ß√£o da Conven√ß√£o-Quadro para o Controle do Tabaco em todos os pa√≠ses, conforme apropriado')
        st.write('**3.c** Aumentar substancialmente o financiamento da sa√∫de e o recrutamento, desenvolvimento e forma√ß√£o, e reten√ß√£o do pessoal de sa√∫de nos pa√≠ses em desenvolvimento, especialmente nos pa√≠ses menos desenvolvidos e nos pequenos Estados insulares em desenvolvimento')
        st.write('**3.d** Refor√ßar a capacidade de todos os pa√≠ses, particularmente os pa√≠ses em desenvolvimento, para o alerta precoce, redu√ß√£o de riscos e gerenciamento de riscos nacionais e globais de sa√∫de')

    st.subheader('Mapeando casos de COVID-19')
    st.write('O cen√°rio atual enfrentado pelo mundo nos √∫ltimos dois anos com a pandemia, enfatizou a necessidade de consumir dados atualizados e precisos. '
             'Adicionalmente, os dados geoespaciais, contribuem significativamente na representa√ß√£o das informa√ß√µes. ' )
    st.write('Combinando dados estat√≠sticos e mapas, pode-se n√£o s√≥ passar uma mensagem clara e de f√°cil entendimento ao usu√°rio, como tamb√©m √© uma das formas '
             'de contribuir com o ODS 3, ao levantar informa√ß√µes relevantes como a dos casos da doen√ßa em um munic√≠pio, e a sustentar o **Indicador 3.b**. '
             'Portanto, ser√£o apresentados dados de **Casos de COVID-19 em Curitiba - PR**')
    with st.expander('Mais detallhes sobre o Indicador 3.b'):
        st.write('**Indicador 3.b:** "Apoiar a pesquisa e o desenvolvimento de vacinas e medicamentos para as doen√ßas transmiss√≠veis e n√£o transmiss√≠veis, que afetam principalmente os pa√≠ses em desenvolvimento, proporcionar o acesso a medicamentos e vacinas essenciais a pre√ßos acess√≠veis, '
             'de acordo com a Declara√ß√£o de Doha, que afirma o direito dos pa√≠ses em desenvolvimento de utilizarem plenamente as disposi√ß√µes do acordo TRIPS sobre flexibilidades para proteger a sa√∫de p√∫blica e, em particular, proporcionar o acesso a medicamentos para todos."')
    st.write(
        'A seguir, o relat√≥rio contendo as informa√ß√µes sobre o n√∫mero de casos de COVID-19 no munic√≠pio de Curitiba.')

    url = 'https://ippuc.org.br/geodownloads/SHAPES_SIRGAS/DIVISA_DE_BAIRROS_SIRGAS.zip'
    filename = 'DIVISA_DE_BAIRROS.shp'
    r = requests.get(url)
    z = zipfile.ZipFile(io.BytesIO(r.content))
    z.extractall()
    df_bairros = gpd.read_file(filename, sep=',')

    casos = 'https://mid.curitiba.pr.gov.br/dadosabertos/CasosCovid19/2022-04-06_Casos_Covid_19_-_Base_de_Dados.csv'
    df_casos = pd.read_csv(casos, encoding='latin1', delimiter=';')
    casos_por_bairro = df_casos.groupby("BAIRRO")[['CLASSIFICA√á√ÉO FINAL']].count().reset_index()
    join = pd.merge(df_bairros, df_casos, left_on="NOME", right_on="BAIRRO")

    st.subheader('Mapa de casos da doen√ßa por bairro de Curitiba - PR')
    m = folium.Map(location=[-25.5, -49.3], tiles='Stamen Terrain', zoom_start=11, control_scale=True)
    bins = list(casos_por_bairro['CLASSIFICA√á√ÉO FINAL'].quantile([0, 0.1, 0.75, 0.9, 0.98, 1]))
    folium.Choropleth(
        geo_data=df_bairros,
        name='Casos por bairro',
        data=casos_por_bairro,
        columns=['BAIRRO', 'CLASSIFICA√á√ÉO FINAL'],
        key_on='feature.properties.NOME',
        fill_color='BuPu',
        legend_name='Casos por bairro',
        bins=bins,
        labels={'BAIRRO'},
        tooltip=folium.features.GeoJsonTooltip(fields=['BAIRRO'], localize=True)
    ).add_to(m)

    style_function = lambda x: {'fillColor': '#ffffff',
                                'color': '#000000',
                                'fillOpacity': 0,
                                'weight': 0.1}
    highlight_function = lambda x: {'fillColor': '#000000',
                                    'color': '#000000',
                                    'fillOpacity': 0,
                                    'weight': 0.1}

    NIL = folium.features.GeoJson(
        df_bairros,
        style_function=style_function,
        control=False,
        highlight_function=highlight_function,
        tooltip=folium.features.GeoJsonTooltip(
            fields=['NOME'],
            aliases=['Nome do bairro: '],
            style=("background-color: white; color: #333333; font-family: arial; font-size: 12px; padding: 10px;"))
    )
    m.add_child(NIL)
    m.keep_in_front(NIL)
    folium.LayerControl().add_to(m)
    folium_static(m)

    st.subheader('Informa√ß√µes sobre os casos da doen√ßa')
    st.markdown(""" Essa tabela apresenta a data, classifica√ß√£o, idade, sexo, bairro e status dos casos.""")
    table_days = st.slider('Escolha a quantidade de casos que voc√™ quer ver na tabela. ', min_value=3, max_value=15,
                           value=5, step=1)
    st.write(f'**Resumo dos √∫ltimos {table_days} casos de COVID-19.**')
    a = df_casos.iloc[-table_days:, -8:]
    my_table = st.table(a)

    # Gr√°fico Total de Casos
    st.subheader(f'Total de casos por bairro.')
    total_cases_bairro = df_casos['BAIRRO'].value_counts()
    st.bar_chart(total_cases_bairro)

    st.subheader(f'Total de casos para Curitiba')
    total_cases_chart = df_casos['ENCERRAMENTO'].value_counts()
    st.bar_chart(total_cases_chart)
    st.markdown(
        """**OBS:** Voc√™ pode passar o mouse sobre a barra para ver a quantidade exata de casos e usar o mouse para aumentar ou diminuir o tamanho do gr√°fico.""")

    st.subheader('Fonte dos dados')
    st.info("""
        \n üîç Os dados de **COVID-19** est√£o dispon√≠veis no [Portal de dados abertos](https://www.curitiba.pr.gov.br/dadosabertos/) da Prefeitura Municipal de Curitiba.
        \n üîç Os **dados espaciais** do munic√≠pio s√£o disponibilizados pelo [IPPUC](https://ippuc.org.br/geodownloads) - Instituto de Pesquisa e Planejamento Urbano de Curitiba.""")

